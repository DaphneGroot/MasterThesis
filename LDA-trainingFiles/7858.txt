Fast Fourier transform.
In de numerieke wiskunde is een Fast Fourier transform ("snelle fouriertransformatie", afgekort tot FFT) een algoritme voor het efficiënt berekenen van de discrete fouriertransformatie (DFT) van een discreet signaal waarvan de waarden bekend zijn in een eindig aantal formula_1 equidistante punten. Terwijl directe berekening een efficiëntie heeft van formula_2, is de efficiëntie van een FFT formula_3. De daarmee gemoeide tijdwinst is aanzienlijk, zeker voor grote formula_1.
Het algoritme is ontwikkeld door James Cooley en John Tukey in 1965, en komt er in zijn oorspronkelijke vorm op neer dat een fouriertransformatie met lengte formula_1 wordt gesplitst in twee transformaties met lengte formula_6, waarbij gebruikgemaakt wordt van de periodiciteit en symmetrie in de sinus en cosinus. Door deze opsplitsing recursief toe te passen ontstaat een verbetering van de orde formula_7. Voor bijvoorbeeld formula_8 is dat al een factor 630.
Voor de toepassing van een dergelijke recursie is vereist dat formula_1 een macht van 2 is. Later is deze methode gegeneraliseerd naar een ontbinding in willekeurige priemfactoren, waardoor een meer algemene toepasbaarheid ontstond. Gebruik van grote priemfactoren kan echter zeer nadelige gevolgen hebben voor de rekentijd. Voor praktische toepassing zoals in signaalanalyse heeft de beperking tot machten van twee nauwelijks gevolgen. Wanneer een 3-dimensionale FFT wordt gebruikt, zoals in de kristallografie, kan het echter leiden tot bijna 8 keer meer geheugengebruik en 24 keer meer rekentijd dan strikt noodzakelijk.
Het algoritme van Cooley en Tukey.
Aan de hand van het algoritme van Cooley en Tukey is goed te zien hoe een discrete fouriertransformatie van dimensie 2n gereduceerd kan worden tot 2 transformaties van dimensie n.
met DFT formula_13,
met DFT formula_15.
Merk ook op dat de wegingsfactoren formula_17 slechts eenmaal berekend hoeven te worden voor de beide n-dimensionale transformaties.
