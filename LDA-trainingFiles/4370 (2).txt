Bytecode.
Bytecode is een soort machinetaal die het resultaat is van de (gedeeltelijke) compilatie van een computerprogramma. In tegenstelling tot "echte" machinetaal is bytecode niet geschikt om direct op een computer te worden uitgevoerd.
Bytecode kan worden uitgevoerd op een virtuele machine (zoals de.NET Common Language Runtime (CLR) of de Java Virtual Machine) of later vertaald worden naar "echte" machinetaal.
Deze benadering maakt het mogelijk platform-onafhankelijke programma's te schrijven: op elk platform waarvoor een Virtuele Machine beschikbaar is, kan dan hetzelfde programma worden uitgevoerd.
Voor- en nadelen van bytecode.
Een vaak genoemd nadeel van bytecode is dat het langzamer zou zijn dan het uitvoeren van machinecode; de machinecode kan immers direct door de processor worden uitgevoerd. Indien bytecode wordt 'geïnterpreteerd', dan zal deze inderdaad trager zijn (soms wel tot een factor 20) dan machinecode. Indien de bytecode echter van tevoren zou worden omgezet naar machinecode is deze theoretisch gezien even snel. In de Java Virtual Machine wordt just in time compilatie en interpretatie door elkaar gebruikt (just in time voor de kritieke, vaak aangeroepen stukken bytecode).
Een voordeel van bytecode is naast platformonafhankelijkheid dat het in principe specifiek te optimaliseren is voor de hardware waar het op draait. Stel dat een programma geschreven in machinecode is gemaakt voor een bepaalde processor met een snelle instructie X (bijvoorbeeld Intels SSE-instructies), dan kunnen processors zonder deze instructie X het programma niet uitvoeren, en moet het programma zo worden gecompileerd dat de snelle instructie X niet voorkomt en wordt vervangen door een aantal langzamere instructies die wél op alle processoren werken. Een virtual machine zou pas bij compilatie kunnen kijken welke instructies beschikbaar zijn en de bytecode automatisch kunnen omzetten naar de snelste instructies die beschikbaar zijn op de computer.
